"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[367],{5120:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>j,contentTitle:()=>l,default:()=>u,frontMatter:()=>h,metadata:()=>x,toc:()=>o});var r=i(4848),d=i(8453),n=(i(6540),i(4625));const c=()=>(0,r.jsx)("div",{className:"learn-page text-left flex md:flex-row flex-col text-slate",children:(0,r.jsxs)("div",{className:"flex-1",children:[(0,r.jsxs)("p",{className:"text-justify",children:["The construction is described in the paper ",(0,r.jsx)("a",{href:"https://ieeexplore.ieee.org/document/7218100/",children:'"Hypergraph Based Query Optimization"'}),", which we will use by translating the logic to OT circuits, starting with decryption into the circuit using the extended decryption process of the address content. We adopt their term definitions in this section, ",(0,r.jsx)(n.N_,{to:"/docs/hypergraph/queryplanner",children:"Query Planner"}),", and ",(0,r.jsx)(n.N_,{to:"/docs/hypergraph/queryevaluator",children:"Query Evaluator"}),". their definitions provided here roughly verbatim for convenience:"]}),(0,r.jsxs)("div",{className:"p-6 my-6 block rounded-xl dark:bg-white/10 bg-pink-50 drop-shadow-xl font-['ui-serif']",children:[(0,r.jsx)("div",{children:"Notation:"}),(0,r.jsxs)("ol",{className:"list-decimal pl-6",children:[(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"RDF Graph"})," \u2013 ",(0,r.jsx)("code",{children:"G = (V, E)"})," where ",(0,r.jsxs)("code",{children:["V = ","{","v|v \u2208 S \u222a O","}"]})," and ",(0,r.jsxs)("code",{children:["E = ","{","e",(0,r.jsx)("sub",{children:"1"}),", e",(0,r.jsx)("sub",{children:"2"}),", ...","}","\u2203e = ","{","u, v","}"]})," where ",(0,r.jsx)("code",{children:"u, v \u2208 V"}),"."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"Edge Labeling Function"})," \u2013 ",(0,r.jsxs)("code",{children:["l",(0,r.jsx)("sub",{children:"e"}),"(S, O) = P"]}),"."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"Node Labeling Function"})," \u2013 ",(0,r.jsxs)("code",{children:["l",(0,r.jsx)("sub",{children:"v"}),"(v",(0,r.jsx)("sub",{children:"t"}),") = t"]})," where ",(0,r.jsx)("code",{children:"t \u2208 (S \u222a O)"})," and ",(0,r.jsx)("code",{children:"S = Subject(URI \u222a BLANKS)"}),", ",(0,r.jsx)("code",{children:"P = Predicate(URI)"}),", ",(0,r.jsx)("code",{children:"O = Object(URI \u222a BLANKS \u222a LIT)"}),"."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"Hypergraph"})," \u2013 ",(0,r.jsx)("code",{children:"H(G) = (V, E)"})," where node ",(0,r.jsxs)("code",{children:["V = ","{","v",(0,r.jsx)("sub",{children:"1"}),", ..., v",(0,r.jsx)("sub",{children:"n"}),"}"]})," and ",(0,r.jsxs)("code",{children:["E = ","{","e",(0,r.jsx)("sub",{children:"1"}),", ..., e",(0,r.jsx)("sub",{children:"n"}),"}"]})," where ",(0,r.jsxs)("code",{children:["V = ","{","v|v \u2208 S \u222a O \u222a P","}"]})," and each edge ",(0,r.jsx)("code",{children:"E"})," is a non-empty set of ",(0,r.jsxs)("code",{children:["V . \u2200P, \u2203e|(S",(0,r.jsx)("sub",{children:"i"}),", O",(0,r.jsx)("sub",{children:"i"}),") \u2208 H(G)"]})," where ",(0,r.jsx)("code",{children:"1 \u2264 i \u2264 n"}),"."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"Overlapping Hyperedge"})," \u2013 ",(0,r.jsxs)("code",{children:["(h",(0,r.jsx)("sub",{children:"i"}),"(G) \u2291 h",(0,r.jsx)("sub",{children:"i+1"}),"(G))"]})," where ",(0,r.jsxs)("code",{children:["h",(0,r.jsx)("sub",{children:"1"}),"(G) = (S",(0,r.jsx)("sub",{children:"1"}),", P",(0,r.jsx)("sub",{children:"1"}),", O",(0,r.jsx)("sub",{children:"1"}),")"]})," and ",(0,r.jsxs)("code",{children:["h",(0,r.jsx)("sub",{children:"2"}),"(G) = (S",(0,r.jsx)("sub",{children:"2"}),", P",(0,r.jsx)("sub",{children:"2"}),", O",(0,r.jsx)("sub",{children:"2"}),"), (h",(0,r.jsx)("sub",{children:"1"}),"(G) \u2291 h",(0,r.jsx)("sub",{children:"2"}),"(G)) iff \u2200s",(0,r.jsx)("sub",{children:"1"})," \u2208 S",(0,r.jsx)("sub",{children:"1"})," \u2208 h",(0,r.jsx)("sub",{children:"1"}),"(G)\u2203s",(0,r.jsx)("sub",{children:"2"})," \u2208 S",(0,r.jsx)("sub",{children:"2"})," \u2208 h",(0,r.jsx)("sub",{children:"2"}),"(G)\u2228\u2200o",(0,r.jsx)("sub",{children:"1"})," \u2208 O",(0,r.jsx)("sub",{children:"1"})," \u2208 h",(0,r.jsx)("sub",{children:"1"}),"(G)\u2203o",(0,r.jsx)("sub",{children:"2"})," \u2208 O",(0,r.jsx)("sub",{children:"2"})," \u2208 h",(0,r.jsx)("sub",{children:"2"}),"(G)\u2228\u2200p",(0,r.jsx)("sub",{children:"1"})," \u2208 P",(0,r.jsx)("sub",{children:"1"})," \u2208 h",(0,r.jsx)("sub",{children:"1"}),"(G)\u2203p",(0,r.jsx)("sub",{children:"2"})," \u2208 P",(0,r.jsx)("sub",{children:"2"})," \u2208 h",(0,r.jsx)("sub",{children:"2"}),"(G)"]}),"."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"Predicate-Based Index"})," \u2013 ",(0,r.jsx)("code",{children:"I(G) = (V, E)"})," where ",(0,r.jsxs)("code",{children:["V = ","{","v|v \u2208 P",(0,r.jsx)("sub",{children:"i"})," \u2208 h",(0,r.jsx)("sub",{children:"i"})," \u2227 \u03b4","}"]})," and ",(0,r.jsxs)("code",{children:["E = (v",(0,r.jsx)("sub",{children:"i"}),", v",(0,r.jsx)("sub",{children:"j"}),")"]})," where ",(0,r.jsxs)("code",{children:["v",(0,r.jsx)("sub",{children:"i"}),", v",(0,r.jsx)("sub",{children:"j"})," \u2208 V"]})," and ",(0,r.jsx)("code",{children:"1 \u2264 i \u2264 n \u2212 1, 1 \u2264 j \u2264 n"})," for ",(0,r.jsx)("code",{children:"\u03b4 \u2208 V \u2203e = (\u03b4, v)"}),". ",(0,r.jsx)("code",{children:"\u03b4"})," is the root of the index."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"SPARQL Query"})," \u2013 ",(0,r.jsxs)("code",{children:["Q",(0,r.jsx)("sup",{children:"R"})]})," contains ",(0,r.jsxs)("code",{children:["<Q",(0,r.jsx)("sup",{children:"q"}),", Q",(0,r.jsx)("sup",{children:"s"}),", Q",(0,r.jsx)("sup",{children:"p"})," >"]})," where ",(0,r.jsxs)("code",{children:["Q",(0,r.jsx)("sup",{children:"q"})]})," is the query form and ",(0,r.jsxs)("code",{children:["Q",(0,r.jsx)("sup",{children:"p"})]})," is the match pattern if ",(0,r.jsxs)("code",{children:["?x \u2208 var(Q",(0,r.jsx)("sup",{children:"q"}),")"]})," then ",(0,r.jsxs)("code",{children:["?x \u2208 var(Q",(0,r.jsx)("sup",{children:"p"}),")"]})," and ",(0,r.jsxs)("code",{children:["Q",(0,r.jsx)("sup",{children:"s"})]})," contains constraints like ",(0,r.jsx)("code",{children:"FILTER"}),", ",(0,r.jsx)("code",{children:"OPTIONAL"}),"."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"Query Graph"})," \u2013 ",(0,r.jsxs)("code",{children:["Q",(0,r.jsx)("sup",{children:"G"})," = (V, E), V \u2190 ","{","var \u2208 Q",(0,r.jsx)("sup",{children:"p"}),(0,r.jsx)("sub",{children:"i"}),"}"]})," and ",(0,r.jsxs)("code",{children:["E \u2190 ","{","P \u2208 Q",(0,r.jsx)("sup",{children:"p"}),(0,r.jsx)("sub",{children:"i"})," \u2227 (var \u2208 Q",(0,r.jsx)("sup",{children:"p"}),(0,r.jsx)("sub",{children:"i"}),", var \u2208 Q",(0,r.jsx)("sup",{children:"p"}),(0,r.jsx)("sub",{children:"i+1"}),")","}"]})," where ",(0,r.jsx)("code",{children:"1 \u2264 i \u2264 n"}),", ",(0,r.jsx)("code",{children:"n"})," is the number of predicates, ",(0,r.jsx)("code",{children:"P"})," is the predicate."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"Query Path"})," \u2013 ",(0,r.jsxs)("code",{children:["Q",(0,r.jsx)("sup",{children:"path"}),"\u2203Q",(0,r.jsx)("sup",{children:"path"}),", \u03b4 \u2192 P",(0,r.jsx)("sub",{children:"i"})," \u2208 I(G)|P",(0,r.jsx)("sub",{children:"i"})]}),". ",(0,r.jsxs)("code",{children:["size = minsize \u2227 (P",(0,r.jsx)("sub",{children:"i"})," \u2192 P",(0,r.jsx)("sub",{children:"i+1"}),") \u2208 I(G) if \u2203var \u2208 Q",(0,r.jsx)("sup",{children:"p"}),(0,r.jsx)("sub",{children:"i"})," == var \u2208 Q",(0,r.jsx)("sup",{children:"p"}),(0,r.jsx)("sub",{children:"i+1"})]}),"."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"Data Insertion"})," \u2013 Given ",(0,r.jsxs)("code",{children:["Q",(0,r.jsx)("sup",{children:"R"})]})," and ",(0,r.jsxs)("code",{children:["Q",(0,r.jsx)("sup",{children:"p"})]})," then check ",(0,r.jsxs)("code",{children:["\u2203P",(0,r.jsx)("sub",{children:"i"})," \u2208 Q",(0,r.jsx)("sup",{children:"p"})," \u2208 I(G)"]}),", if true then check ",(0,r.jsxs)("code",{children:["P",(0,r.jsx)("sub",{children:"i"})," \u2208 H(G) \u2228 create h",(0,r.jsx)("sub",{children:"i"})," \u2208 P",(0,r.jsx)("sub",{children:"i"})," \u2227 update H(G)"]})," with ",(0,r.jsxs)("code",{children:["h",(0,r.jsx)("sub",{children:"i"})]}),". Check if ",(0,r.jsxs)("code",{children:["\u2203var \u2208 Q",(0,r.jsx)("sup",{children:"p"})," \u2208 H(G)"]}),", if true then overlap ",(0,r.jsxs)("code",{children:["h",(0,r.jsx)("sub",{children:"i"})]})," with ",(0,r.jsx)("code",{children:"var"}),"\u2019s ",(0,r.jsxs)("code",{children:["h \u2228 update h",(0,r.jsx)("sub",{children:"i"})]})," with ",(0,r.jsxs)("code",{children:["var \u2208 Q",(0,r.jsx)("sup",{children:"p"})]}),"."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("b",{children:"Data Deletion"})," \u2013 Given ",(0,r.jsxs)("code",{children:["Q",(0,r.jsx)("sup",{children:"R"})]})," and ",(0,r.jsxs)("code",{children:["Q",(0,r.jsx)("sup",{children:"p"})]})," then check ",(0,r.jsxs)("code",{children:["\u2203P",(0,r.jsx)("sub",{children:"i"})," \u2208 Q",(0,r.jsx)("sup",{children:"p"})," \u2208 I(G) \u2227 P",(0,r.jsx)("sub",{children:"i"})," \u2208 var"]}),", if true then check ",(0,r.jsxs)("code",{children:["|h",(0,r.jsx)("sub",{children:"i"}),"| == 0"]}),", if true then remove ",(0,r.jsxs)("code",{children:["var \u2208 Q",(0,r.jsx)("sup",{children:"p"})," \u2208 H(G) \u2228"]})," copy of ",(0,r.jsxs)("code",{children:["P",(0,r.jsx)("sub",{children:"i"})]})," exists."]})]})]}),(0,r.jsx)("p",{className:"pb-4 text-justify",children:"Given these definitions, their paper proposes algorithms to perform the whole of the queries for this database:"}),(0,r.jsxs)("div",{className:"p-6 my-6 block rounded-xl dark:bg-white/10 bg-pink-50 drop-shadow-xl font-['ui-serif']",children:[(0,r.jsx)("div",{children:"Create Hypergraph:"}),(0,r.jsxs)("ol",{className:"list-decimal pl-6",children:[(0,r.jsxs)("li",{children:["Given an RDF graph ",(0,r.jsx)("code",{children:"G"})," as triple ",(0,r.jsx)("code",{children:"(S, O, P)"}),"."]}),(0,r.jsx)("li",{children:(0,r.jsxs)("code",{children:["V \u2190 \u2205, E \u2190 \u2205, e",(0,r.jsx)("sub",{children:"i"})," \u2190 \u2205"]})}),(0,r.jsxs)("li",{children:[(0,r.jsx)("code",{children:"\u2200(S, O, P) \u2208 G, V \u2190 V \u222a V \u2208 (S \u222a O \u222a P)"}),"."]}),(0,r.jsxs)("li",{children:[(0,r.jsxs)("code",{children:["\u2200P",(0,r.jsx)("sub",{children:"i"}),"|1 \u2264 i \u2264 n, 1 \u2264 j \u2264 n, ei \u2190 ","{","P",(0,r.jsx)("sub",{children:"i"}),", ","{","S",(0,r.jsx)("sub",{children:"j"})," , O",(0,r.jsx)("sub",{children:"j"}),"}}",", E \u2190 e",(0,r.jsx)("sub",{children:"i"})]}),"."]}),(0,r.jsxs)("li",{children:[(0,r.jsx)("code",{children:"H(G) = (V, E)"}),"."]})]}),(0,r.jsx)("div",{className:"pt-6",children:"Create Predicate-Based Index:"}),(0,r.jsxs)("ol",{className:"list-decimal pl-6",children:[(0,r.jsxs)("li",{children:["Given a hypergraph ",(0,r.jsx)("code",{children:"H(G)"}),"."]}),(0,r.jsx)("li",{children:"Sort hyperedges by size."}),(0,r.jsxs)("li",{children:[(0,r.jsxs)("code",{children:["\u2200h",(0,r.jsx)("sub",{children:"i"}),"|1 \u2264 i \u2264 n \u2212 1"]}),", if ",(0,r.jsxs)("code",{children:["MIN(size(h",(0,r.jsx)("sub",{children:"i"}),"))"]})," then ",(0,r.jsx)("code",{children:"I(G) = I(G) \u222a \u03b4 \u2193 Pi, \u2200j|i + 1 \u2264 j \u2264 n"}),", if ",(0,r.jsxs)("code",{children:["(h",(0,r.jsx)("sub",{children:"i"}),"(G) \u2291 h",(0,r.jsx)("sub",{children:"j"}),"(G)) \u2227 (size(P",(0,r.jsx)("sub",{children:"i"}),") == size(P",(0,r.jsx)("sub",{children:"j"}),"))"]})," then ",(0,r.jsxs)("code",{children:["I(G) = I(G) \u222a P",(0,r.jsx)("sub",{children:"i"})," \u2194 P",(0,r.jsx)("sub",{children:"j"})]})," else ",(0,r.jsxs)("code",{children:["I(G) = I(G) \u222a P",(0,r.jsx)("sub",{children:"i"})," \u2192 P",(0,r.jsx)("sub",{children:"j"})]}),"."]})]})]})]})}),h={sidebar_position:3},l="RDF Storage",x={id:"learn/oblivious-hypergraph/rdf-storage",title:"RDF Storage",description:"",source:"@site/docs/learn/oblivious-hypergraph/rdf-storage.md",sourceDirName:"learn/oblivious-hypergraph",slug:"/learn/oblivious-hypergraph/rdf-storage",permalink:"/docs/learn/oblivious-hypergraph/rdf-storage",draft:!1,unlisted:!1,editUrl:"https://github.com/QuilibriumNetwork/docs/tree/main/docs/learn/oblivious-hypergraph/rdf-storage.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"learn",previous:{title:"Oblivious Transfer",permalink:"/docs/learn/oblivious-hypergraph/oblivious-transfer"},next:{title:"Query Planner",permalink:"/docs/learn/oblivious-hypergraph/query-planner"}},j={},o=[];function t(e){const s={h1:"h1",header:"header",...(0,d.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"rdf-storage",children:"RDF Storage"})}),"\n",(0,r.jsx)(c,{})]})}function u(e={}){const{wrapper:s}={...(0,d.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(t,{...e})}):t(e)}},8453:(e,s,i)=>{i.d(s,{R:()=>c,x:()=>h});var r=i(6540);const d={},n=r.createContext(d);function c(e){const s=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function h(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:c(e.components),r.createElement(n.Provider,{value:s},e.children)}}}]);